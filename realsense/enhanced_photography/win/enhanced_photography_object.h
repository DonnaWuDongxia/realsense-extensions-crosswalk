// Copyright 2015 Intel Corporation. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef REALSENSE_ENHANCED_PHOTOGRAPHY_WIN_ENHANCED_PHOTOGRAPHY_OBJECT_H_
#define REALSENSE_ENHANCED_PHOTOGRAPHY_WIN_ENHANCED_PHOTOGRAPHY_OBJECT_H_

#include <string>
#include <vector>

// This file is auto-generated by enhanced_photography.idl
#include "enhanced_photography.h" // NOLINT

#include "base/message_loop/message_loop_proxy.h"
#include "base/synchronization/lock.h"
#include "base/threading/thread.h"
#include "realsense/enhanced_photography/win/enhanced_photography_instance.h"
#include "third_party/libpxc/include/pxcenhancedphoto.h"
#include "third_party/libpxc/include/pxcphoto.h"
#include "third_party/libpxc/include/pxcsensemanager.h"
#include "xwalk/common/event_target.h"

namespace realsense {
namespace enhanced_photography {

using xwalk::common::XWalkExtensionFunctionInfo;
using namespace jsapi::enhanced_photography; // NOLINT

class EnhancedPhotographyObject : public xwalk::common::BindingObject {
 public:
  explicit EnhancedPhotographyObject(EnhancedPhotographyInstance* instance);
  ~EnhancedPhotographyObject() override;

 private:
  void OnMeasureDistance(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnDepthRefocus(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnComputeMaskFromCoordinate(
      scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnComputeMaskFromThreshold(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnInitMotionEffect(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnApplyMotionEffect(scoped_ptr<XWalkExtensionFunctionInfo> info);

  void CreateDepthPhotoObject(PXCPhoto* pxcphoto,
                              jsapi::depth_photo::Photo* photo);
  bool CopyColorImage(PXCImage* pxcimage);
  bool CopyMaskImage(PXCImage* pxcimage);
  void ReleaseResources();

  PXCSession* session_;
  PXCEnhancedPhoto* ep_;

  EnhancedPhotographyInstance* instance_;

  scoped_ptr<uint8[]> binary_message_;
  size_t binary_message_size_;
};

}  // namespace enhanced_photography
}  // namespace realsense

#endif  // REALSENSE_ENHANCED_PHOTOGRAPHY_WIN_ENHANCED_PHOTOGRAPHY_OBJECT_H_
