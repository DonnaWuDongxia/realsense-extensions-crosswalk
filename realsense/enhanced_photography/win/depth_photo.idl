// Copyright (c) 2015 Intel Corporation. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// EnhancedPhotography API
namespace depth_photo {
  enum PixelFormat {
    RGB32,
    DEPTH,
    DEPTH_F32,
    Y8
  };

  dictionary Image {
    PixelFormat format;
    long width;
    long height;
    long[] data;
  };

  dictionary MaskImage{
    PixelFormat format;
    long width;
    long height;
    double[] data;
  };

  dictionary Photo{
    DOMString objectId;
  };

  callback ImagePromise = void(Image image, DOMString error);
  callback Promise = void(DOMString success, DOMString error);
  callback PhotoPromise = void(Photo photo, DOMString error);

  interface Functions {
    static void queryReferenceImage(ImagePromise promise);
    static void queryOriginalImage(ImagePromise promise);
    static void queryDepthImage(ImagePromise promise);
    static void queryRawDepthImage(ImagePromise promise);
    static void setReferenceImage(ArrayBuffer image, Promise promise);
    static void setDepthImage(Image image, Promise promise);
    static void clone(PhotoPromise promise);
  };
};
