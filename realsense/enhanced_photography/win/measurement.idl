// Copyright (c) 2015 Intel Corporation. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Measurement interface
namespace measurement {
  dictionary WorldPoint {
    double x;
    double y;
    double z;
    double confidence;
    double precision;
  };

  dictionary MeasureData {
    double     distance;
    double     confidence;
    double     precision;
    WorldPoint startPoint;
    WorldPoint endPoint;
  };

  callback DistancePromise = void(MeasureData measureData, DOMString error);
  callback IntPromise = void(long size, DOMString error);

  interface Functions {
    void measureDistance(depth_photo.Photo photo, depth_photo.Point start, depth_photo.Point end, DistancePromise promise);
    void measureUADistance(depth_photo.Photo photo, depth_photo.Point start, depth_photo.Point end, DistancePromise promise);
    void queryUADataSize(IntPromise promise);
    void queryUAData(DistancePromise promise);

    [nodoc] Measurement measurementConstructor(DOMString objectId);
  };
};
