// Copyright 2015 Intel Corporation. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef REALSENSE_ENHANCED_PHOTOGRAPHY_WIN_PHOTO_CAPTURE_OBJECT_H_
#define REALSENSE_ENHANCED_PHOTOGRAPHY_WIN_PHOTO_CAPTURE_OBJECT_H_

#include <string>
#include <vector>

// This file is auto-generated by photo_capture.idl
#include "photo_capture.h" // NOLINT

#include "base/message_loop/message_loop_proxy.h"
#include "base/synchronization/lock.h"
#include "base/threading/thread.h"
#include "realsense/enhanced_photography/win/enhanced_photography_instance.h"
#include "third_party/libpxc/include/pxcenhancedphoto.h"
#include "third_party/libpxc/include/pxcphoto.h"
#include "third_party/libpxc/include/pxcsensemanager.h"
#include "xwalk/common/event_target.h"
#include "../../common/common.h"

namespace realsense {
using namespace jsapi::common;  // NOLINT
namespace enhanced_photography {

using xwalk::common::XWalkExtensionFunctionInfo;
using namespace jsapi::photo_capture; // NOLINT

class PhotoCaptureObject : public xwalk::common::EventTarget {
 public:
  explicit PhotoCaptureObject(EnhancedPhotographyInstance* instance);
  ~PhotoCaptureObject() override;

  // EventTarget implementation.
  void StartEvent(const std::string& type) override;
  void StopEvent(const std::string& type) override;

 private:
  // Message handlers
  void OnEnableDepthStream(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnDisableDepthStream(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnGetDepthImage(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void OnTakePhoto(scoped_ptr<XWalkExtensionFunctionInfo> info);

  // Run on pipeline_thread_
  void RunPipeline();
  void StopAndDestroyPipeline(
      scoped_ptr<XWalkExtensionFunctionInfo> info);
  void DoGetDepthImage(scoped_ptr<XWalkExtensionFunctionInfo> info);
  void DoTakePhoto(scoped_ptr<XWalkExtensionFunctionInfo> info);

  // Helpers
  void DispatchErrorEvent(const ErrorCode& error, const std::string& message);
  void ReleaseResources();

  bool on_depthquality_;

  // Guard depth_enabled_
  base::Lock lock_;
  bool depth_enabled_;

  base::Thread pipeline_thread_;
  scoped_refptr<base::MessageLoopProxy> message_loop_;

  PXCSession* session_;
  PXCSenseManager* sense_manager_;
  PXCImage* depth_image_;
  PXCEnhancedPhoto::PhotoUtils* photo_utils_;
  PXCCapture* capture_;
  PXCCapture::Device* capture_device_;

  EnhancedPhotographyInstance* instance_;

  scoped_ptr<uint8[]> binary_message_;
  size_t binary_message_size_;
};

}  // namespace enhanced_photography
}  // namespace realsense

#endif  // REALSENSE_ENHANCED_PHOTOGRAPHY_WIN_PHOTO_CAPTURE_OBJECT_H_
