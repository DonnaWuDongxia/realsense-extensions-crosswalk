// Copyright (c) 2015 Intel Corporation. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

namespace scene_perception {
  dictionary CheckingEvent {
    double quality;
  };

  enum Accuracy {
    high,
    med,
    low,
    failed
  };

  dictionary Image {
    long width;
    long height;
    long[] data;
  };

  dictionary Sample {
    Image color;
    Image depth;
  };

  dictionary TrackingEvent {
    double[] cameraPose;
    Accuracy accuracy;
  };

  dictionary BlockMesh {
    DOMString meshId;
    double vertexStartIndex;
    double numVertices;
    double faceStartIndex;
    double numFaces;
  };

  dictionary MeshingEvent {
    BlockMesh[] blockMeshes;
    double numberOfVertices;
    double[] vertices;
    double[] colors;
    double numberOfFaces;
    double[] faces;
  };

  dictionary ErrorEvent {
    DOMString status;
  };

  callback Promise = void (DOMString success, DOMString error);
  callback SamplePromise = void (Sample sample, DOMString error);

  interface Events {
    static void onerror();
    static void onsample();
    static void onchecking();
    static void ontracking();
    static void onmeshing();
  };

  interface Functions {
    static void start(Promise promise);
    static void stop(Promise promise);
    static void reset(Promise promise);
    static void enableTracking(Promise promise);
    static void disableTracking(Promise promise);
    static void enableMeshing(Promise promise);
    static void disableMeshing(Promise promise);
    static void getSample(SamplePromise promise);

    [nodoc] static ScenePerception scenePerceptionConstructor(DOMString objectId);
  };
};
